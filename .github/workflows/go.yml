# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v -o sun-forecast-main ./main.go ./server.go

    # - name: Test
      # run: go test -v ./...

    - name: 'Google auth'
      id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
        service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'
        project_id: 'sun-forecast'

    - name: "Install app-engine-go"
      # https://cloud.google.com/sdk/docs/components#external_package_managers
      run: |
        sudo apt-get update && \
        sudo apt-get install apt-transport-https ca-certificates gnupg curl sudo && \
        echo "deb https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg && \
        sudo apt-get update && sudo apt-get install google-cloud-cli-app-engine-go

    - name: 'Google deploy'
      id: 'deploy'
      uses: 'google-github-actions/deploy-appengine@v1'
      with:
        project_id: 'sun-forecast'